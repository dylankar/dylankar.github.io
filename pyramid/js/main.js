var Graph=function(){this.cumulativePyramid={}};Graph.prototype.key=function(t){if("number"==typeof t)return"_"+t.toString();throw new TypeError},Graph.prototype.splitLines=function(t){return t.trim().split("\n ")},Graph.prototype.rowToIntArray=function(t){for(var r=t.split(" "),n=[],e=0;e<r.length;e++)n.push(parseInt(r[e]));return n},Graph.prototype.incrementRow=function(t,r){for(var n=[],e=0;e<t.length-1;e++){var a="0"===t[e][0]?t[e][1]:t[e],i="0"===t[e+1][0]?t[e+1][1]:t[e+1],o=parseInt(Math.max(a,i));if(o.isNaN||parseInt(r[e]).isNaN)throw new TypeError;n.push(o+parseInt(r[e]))}return n},Graph.prototype.incrementPyramid=function(t){var r=this.splitLines(t);this.cumulativePyramid[this.key(r.length-1)]=this.rowToIntArray(r[r.length-1]);for(var n=r.length-1;n>0;n--){var e=this.cumulativePyramid[this.key(n)],a=this.rowToIntArray(r[n-1]);incrementedRow=this.incrementRow(e,a),this.cumulativePyramid[this.key(n-1)]=incrementedRow}},Graph.prototype.findMaxSum=function(t){this.incrementPyramid(t);var r=this.key(0);return this.cumulativePyramid[r][0]};try{$(function(){var t=function(t){$("#answer-cont").empty(),$("#answer-cont").append($("<h3>Maximum path:</h3>")),$("#answer-cont").append($($("#answer").length?"#answer":'<h1 id="answer">').append(t))},r=function(r){var n=r.target.files[0],e=new FileReader;e.onload=function(r){answer=(new Graph).findMaxSum(this.result),t(answer)},e.readAsText(n)};$("#file").change(r)})}catch(e){console.warn("Running in test mode: go to http://dylankar.io/pyramid to display answers.")}